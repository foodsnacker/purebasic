; Copyright (c) 2022, Jörg Burbach, Ducks on the Water; All rights reserved.; This source code is licensed under the BSD-style license found in the LICENSE file in the root directory of this source tree. ; Player left: Q/A; Player right: P/L; Quit: EscapeBatX       = 10BatY       = 60BallX      =  6BallY      =  6LeftPos    = 480 / 2 - BatX / 2RightPos   = LeftPosBallPosX   = 640 / 2 - BallX / 2 + 50BallPosY   = 480 / 2 - BallY / 2BallAddX.f = 0BallAddY.f = 0LeftScore  = 0RightScore = 0Win        = 0Scored     = 99Blink      = 0Show       = 1#BallAddX  = 4#BallAddY  = 2Procedure CatchMe(ID,Sprite,X,Y)  CatchSprite(ID,Sprite)  ZoomSprite(ID, x, y)EndProcedureInitSprite()InitKeyboard()OpenWindow(0,50,50,640,480,"BlockTennis",#PB_Window_NoGadgets|#PB_Window_ScreenCentered|#PB_Window_WindowCentered|#PB_Window_BorderLess)OpenWindowedScreen(WindowID(0),0,0,640,480,0,0,0)CatchMe(20,?Bat,BallX,BallY)CatchMe(21,?Bat,BatX,BatY)CatchMe(22,?Bat,BatX,BatY)CatchMe(24,?Bat,640,10)CatchMe(23,?Bat,640,10)CatchMe(25,?Bat,10,420)CatchMe(26,?Doppel,12,30)For i = 0 To 15 : CatchMe(i, ?Ziffer_0 + i * 82, 24,30) : Next iexit = 0Repeat Blink + 1 : If Blink = 25 : Blink = 0 : Show = - Show : EndIf  FlipBuffers() ClearScreen(0)  DisplaySprite(25,      315,       50) DisplaySprite(24,        0,       40) DisplaySprite(23,        0,      470) DisplaySprite(20, BallPosX, BallPosY) DisplaySprite(26, 314, 2) If Win = 21    : If Show = - 1 : DisplaySprite(21,   2, LeftPos)  : EndIf : Else : DisplaySprite(21,   2, LeftPos)  : EndIf  If Win = 22    : If Show = - 1 : DisplaySprite(22, 628, RightPos) : EndIf : Else : DisplaySprite(22, 628, RightPos) : EndIf  If Scored = 21 : If Show = - 1 : DisplaySprite(Leftscore, 268, 2) : EndIf : Else : DisplaySprite(Leftscore, 268, 2) : EndIf If Scored = 22 : If Show = - 1 : DisplaySprite(Rightscore,342, 2) : EndIf : Else : DisplaySprite(Rightscore,342, 2) : EndIf   ExamineKeyboard()   If KeyboardPushed(#PB_Key_Q)  : LeftPos  - 4 : If LeftPos  < 52         : LeftPos  = 52         : EndIf : EndIf  If KeyboardPushed(#PB_Key_A)  : LeftPos  + 4 : If LeftPos  > 468 - BatY : LeftPos  = 468 - BatY : EndIf : EndIf  If KeyboardPushed(#PB_Key_P)  : RightPos - 4 : If RightPos < 52         : RightPos = 52         : EndIf : EndIf  If KeyboardPushed(#PB_Key_L)  : RightPos + 4 : If RightPos > 468 - BatY : RightPos = 468 - BatY : EndIf : EndIf  If KeyboardPushed(#PB_Key_Space)   If Scored <> 0 : BallAddX = #BallAddX : BallAddY = #BallAddY : If Scored = 22 Or Scored = 99 : BallAddX = - BallAddX : EndIf : Scored = 0 : EndIf   If Wind <> 0   : BallAddX = #BallAddX : BallAddY = #BallAddY : LeftScore = 0 : RightScore = 0 : Scored = 0 : Win = 0 : EndIf  EndIf   ; Bounced from bat BallPosX + BallAddX If BallPosX > 638 - BatX And BallPosY > RightPos And BallPosY < RightPos + BatY : BallAddX = - BallAddX : If BallAddX < 0 : BallAddX - 0.25 : Else : BallAddX + 0.25 : EndIf : EndIf If BallPosX <   2 + BatX And BallPosY > LeftPos  And BallPosY < LeftPos +  BatY : BallAddX = - BallAddX : If BallAddX < 0 : BallAddX - 0.25 : Else : BallAddX + 0.25 : EndIf : EndIf BallPosY + BallAddY : If BallPosY > 474 - BallY Or BallPosY < 50 : BallAddY = - BallAddY : EndIf   ; Scored! If BallPosX <   2 : RightScore + 1 : Scored = 22 : EndIf If BallPosX > 638 : LeftScore  + 1 : Scored = 21 : EndIf If RightScore = 15 : Win = 22 : EndIf If LeftScore  = 15 : Win = 21 : EndIf   If Win <> 0 Or Scored <> 0 : BallPosY  = 480 / 2 - BallY / 2 : If Scored = 22 : BallPosX = 640 / 2 - BallX / 2 + 50 : EndIf : If Scored = 21 : BallPosX = 640 / 2 - BallX / 2 - 50 : EndIf : BallAddX = 0 : BallAddY = 0 : EndIf   If KeyboardPushed(#PB_Key_Escape)   Exit = 1 EndIf  If WaitWindowEvent(20) = #PB_Event_Menu   If EventMenu() = #PB_Menu_Quit     exit = 1   EndIf EndIf   Until exit = 1 DataSection  Bat:  Data.b $42,$4D,$3A,$00,$00,$00,$00,$00,$00,$00,$36,$00,$00,$00,$28,$00,$00,$00,$01,$00,$00,$00,$01,$00,$00,$00,$01,$00,$18,$00,$00,$00,$00,$00,$04,$00,$00,$00,$13,$0B,$00,$00,$13,$0B,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$FF,$FF,$FF,$00  Ziffer_0:  Data.w $4D42,$0052,$0000,$0000,$0000,$003E,$0000,$0028,$0000,$0004,$0000,$0005,$0000,$0001,$0001,$0000,$0000,$0014,$0000,$0000,$0000,$0000,$0000,$0002,$0000,$0000,$0000,$0000,$0000,$FFFF,$00FF,$0060,$0000,$0090,$0000,$0090,$0000,$0090,$0000,$0060,$0000  Ziffer_1:  Data.w $4D42,$0052,$0000,$0000,$0000,$003E,$0000,$0028,$0000,$0004,$0000,$0005,$0000,$0001,$0001,$0000,$0000,$0014,$0000,$0000,$0000,$0000,$0000,$0002,$0000,$0000,$0000,$0000,$0000,$FFFF,$00FF,$0020,$0000,$0020,$0000,$0020,$0000,$0060,$0000,$0020,$0000  Ziffer_2:  Data.w $4D42,$0052,$0000,$0000,$0000,$003E,$0000,$0028,$0000,$0004,$0000,$0005,$0000,$0001,$0001,$0000,$0000,$0014,$0000,$0000,$0000,$0000,$0000,$0002,$0000,$0000,$0000,$0000,$0000,$FFFF,$00FF,$00F0,$0000,$0040,$0000,$0020,$0000,$0090,$0000,$0060,$0000  Ziffer_3:  Data.w $4D42,$0052,$0000,$0000,$0000,$003E,$0000,$0028,$0000,$0004,$0000,$0005,$0000,$0001,$0001,$0000,$0000,$0014,$0000,$0000,$0000,$0000,$0000,$0002,$0000,$0000,$0000,$0000,$0000,$FFFF,$00FF,$0060,$0000,$0090,$0000,$0020,$0000,$0090,$0000,$0060,$0000  Ziffer_4:  Data.w $4D42,$0052,$0000,$0000,$0000,$003E,$0000,$0028,$0000,$0004,$0000,$0005,$0000,$0001,$0001,$0000,$0000,$0014,$0000,$0000,$0000,$0000,$0000,$0002,$0000,$0000,$0000,$0000,$0000,$FFFF,$00FF,$0020,$0000,$00F0,$0000,$00A0,$0000,$0080,$0000,$0080,$0000  Ziffer_5:  Data.w $4D42,$0052,$0000,$0000,$0000,$003E,$0000,$0028,$0000,$0004,$0000,$0005,$0000,$0001,$0001,$0000,$0000,$0014,$0000,$0000,$0000,$0000,$0000,$0002,$0000,$0000,$0000,$0000,$0000,$FFFF,$00FF,$00E0,$0000,$0010,$0000,$0060,$0000,$0080,$0000,$00F0,$0000  Ziffer_6:  Data.w $4D42,$0052,$0000,$0000,$0000,$003E,$0000,$0028,$0000,$0004,$0000,$0005,$0000,$0001,$0001,$0000,$0000,$0014,$0000,$0000,$0000,$0000,$0000,$0002,$0000,$0000,$0000,$0000,$0000,$FFFF,$00FF,$0060,$0000,$0090,$0000,$00E0,$0000,$0080,$0000,$0060,$0000  Ziffer_7:  Data.w $4D42,$0052,$0000,$0000,$0000,$003E,$0000,$0028,$0000,$0004,$0000,$0005,$0000,$0001,$0001,$0000,$0000,$0014,$0000,$0000,$0000,$0000,$0000,$0002,$0000,$0000,$0000,$0000,$0000,$FFFF,$00FF,$0020,$0000,$0020,$0000,$0020,$0000,$0020,$0000,$00E0,$0000  Ziffer_8:  Data.w $4D42,$0052,$0000,$0000,$0000,$003E,$0000,$0028,$0000,$0004,$0000,$0005,$0000,$0001,$0001,$0000,$0000,$0014,$0000,$0000,$0000,$0000,$0000,$0002,$0000,$0000,$0000,$0000,$0000,$FFFF,$00FF,$0060,$0000,$0090,$0000,$0060,$0000,$0090,$0000,$0060,$0000 Ziffer_9: Data.w $4D42,$0052,$0000,$0000,$0000,$003E,$0000,$0028,$0000,$0004,$0000,$0005,$0000,$0001,$0001,$0000,$0000,$0014,$0000,$0000,$0000,$0000,$0000,$0002,$0000,$0000,$0000,$0000,$0000,$FFFF,$00FF,$0060,$0000,$0010,$0000,$0070,$0000,$0090,$0000,$0060,$0000 Ziffer_10: Data.w $4D42,$0052,$0000,$0000,$0000,$003E,$0000,$0028,$0000,$0006,$0000,$0005,$0000,$0001,$0001,$0000,$0000,$0014,$0000,$0000,$0000,$0000,$0000,$0002,$0000,$0000,$0000,$0000,$0000,$FFFF,$00FF,$0098,$0000,$00A4,$0000,$00A4,$0000,$00A4,$0000,$0098,$0000 Ziffer_11: Data.w $4D42,$0052,$0000,$0000,$0000,$003E,$0000,$0028,$0000,$0006,$0000,$0005,$0000,$0001,$0001,$0000,$0000,$0014,$0000,$0000,$0000,$0000,$0000,$0002,$0000,$0000,$0000,$0000,$0000,$FFFF,$00FF,$0088,$0000,$0088,$0000,$0088,$0000,$0088,$0000,$0088,$0000 Ziffer_12: Data.w $4D42,$0052,$0000,$0000,$0000,$003E,$0000,$0028,$0000,$0006,$0000,$0005,$0000,$0001,$0001,$0000,$0000,$0014,$0000,$0000,$0000,$0000,$0000,$0002,$0000,$0000,$0000,$0000,$0000,$FFFF,$00FF,$00BC,$0000,$0090,$0000,$0088,$0000,$00A4,$0000,$0098,$0000 Ziffer_13: Data.w $4D42,$0052,$0000,$0000,$0000,$003E,$0000,$0028,$0000,$0006,$0000,$0005,$0000,$0001,$0001,$0000,$0000,$0014,$0000,$0000,$0000,$0000,$0000,$0002,$0000,$0000,$0000,$0000,$0000,$FFFF,$00FF,$0098,$0000,$00A4,$0000,$0088,$0000,$00A4,$0000,$0098,$0000 Ziffer_14: Data.w $4D42,$0052,$0000,$0000,$0000,$003E,$0000,$0028,$0000,$0006,$0000,$0005,$0000,$0001,$0001,$0000,$0000,$0014,$0000,$0000,$0000,$0000,$0000,$0002,$0000,$0000,$0000,$0000,$0000,$FFFF,$00FF,$0088,$0000,$00BC,$0000,$00A8,$0000,$00A0,$0000,$00A0,$0000 Ziffer_15: Data.w $4D42,$0052,$0000,$0000,$0000,$003E,$0000,$0028,$0000,$0006,$0000,$0005,$0000,$0001,$0001,$0000,$0000,$0014,$0000,$0000,$0000,$0000,$0000,$0002,$0000,$0000,$0000,$0000,$0000,$FFFF,$00FF,$00B8,$0000,$0084,$0000,$0098,$0000,$00A0,$0000,$00BC,$0000 Doppel: Data.w $4D42,$0052,$0000,$0000,$0000,$003E,$0000,$0028,$0000,$0004,$0000,$0005,$0000,$0001,$0001,$0000,$0000,$0014,$0000,$0000,$0000,$0000,$0000,$0002,$0000,$0000,$0000,$0000,$0000,$FFFF,$00FF,$0000,$0000,$0060,$0000,$0000,$0000,$0060,$0000,$0000,$0000EndDataSection; IDE Options = PureBasic 6.00 LTS (MacOS X - x64); CursorPosition = 8; Folding = +; EnableThread; UseIcon = BlockTennis.icns; Executable = BlockTennis.app; CompileSourceDirectory